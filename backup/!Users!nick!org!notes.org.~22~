
#+TODO: TODO(t) WAIT(w@/!) | DONE(d!) CANCELED(c@)
#+SPDX-FileCopyrightText:bah blah
* Applying as contact tracer
** Different staffing agencies used by VA DOH:
*** 22nd Century - ended up not applying
*** @WORK Medical & Personnel Services
**** @WORK Medical & Personnel Services - couldn't find way to apply on their website!
*** Abacus Corporation [[https://www.abacuscorporation.com/]]  but goes to [[https://secure.jobappnetwork.com/apply/c_abacus/l_en/#s][this]] for application
**** DONE <2020-06-09 Tue> Apply
**** Applied for Case Investigator - Arlington
**** Applied for Contact Tracing Supervisor - Arlington
*** Ajilon - couldn't find any Virginia opportunities
*** Astyra - [[https://astyra.com]]
**** DONE <2020-06-09 Tue> Apply
**** Applied for Contact tracer
**** Received confirmation email
*** Athena Consulting https://athenaconsultingllc.com/
**** DONE Apply for Case Investigator <2020-06-10 Wed>
*** BizTek [[http://biztekpeople.com/]]
**** Was partway through submission for Case Investigator, submitted resume but then they asked for the Right to Represent thing, which I already signed for Athena.  They very clearly stated that I could only work with *one* recruiting agency, and I already told Athena they were the ones.  Well, I passed the test for BizTek, but to go any further I had to do the right to represent form so I stopped.
*** Cor-Tech / Caliper [[https://jobs.cor-tech.net]] or [[http://www.cor-tech.net/]]
**** DONE Apply for Case Investigator Manassass <2020-06-17 Wed>
*** Delta Group [[https://www.delta-tgroup.com/]] 
**** DONE Apply for Case investigator, Loudoun County <2020-06-17 Wed> 
**** They did not ask me (yet) for one of those Right to Represent things
**** Reveived email confirmation of submission
*** IPHI (Institute of Public Health Innovation (through TalentBoost at [[https://www.talentboost.cloud/iphi]]
**** DONE Apply for Community Health Worker Supervisor, Interviewer Supervisor, and Case Interviewer <2020-06-25 Thu>
- <2020-06-26 Fri> Still have heard nothing
*** Premier Staffing Source [[https://www.premierstaffingsource.com][Premier Staffing Source]]
**** DONE Apply to Premier Staffing <2020-06-26 Fri>
- Received message on screen "A recruiter will be in touch with you shortly."

** Following up:
*** TODO contact IPHI / TalentBoost
- To follow up on "Community Health Worker Supervisor with Institute for Public Health Innovation (IPHI)" application (Job # 618)
- IPHI contacts: 
  - phone: 202.747.3512 [[https://www.institutephi.org/contact-us/][contact page]]
  - email: info@institutephi.org - sent email <2020-06-26 Fri>
  - Haha who knows, here's their Twitter: @InstitutePHI
- Talentboost contact:
  - phone on main page: 617-542-1400
  - email: info@talentboost.us  - sent email <2020-06-26 Fri>
*** DONE Contact Athena Consulting 484-477-7747
- State "DONE"       from "TODO"       [2020-06-29 Mon 15:06]
- email of contact on VDH staffing agency list ([[https://www.vdh.virginia.gov/content/uploads/sites/182/2020/05/Staffing-Agency-List.pdf][here]]): melvin@athenaconsultingllc.com -- sent email <2020-06-26 Fri>
- phone on same list: 484-477-7747
- Recieved response <2020-06-28 Sun> that my stuff had been forwarded to VDH.  Thanked them!

** Cover sentence
I am trained as a physician, and I have worked extensively in public mental health.  I have experience working with patients in the community, traveling to their homes for in-person interviews and care. I have led clinical teams in both inpatient and outpatient settings. I believe that patients should feel that they are partners in their own care.

** Cover letter

Dear Recruiting team at Athena Consulting,

My name is Nicholas Taintor, and I am a physician living in Fairfax, Virginia.  I am writing to express my interest in the position of Case Investigator, with the Commonwealth of Virginia COVID-19 contact tracing effort.  I found notification of this position through the VDH website.

I believe that my medical and personal background makes me a strong candidate for this position.  I have spent my career learning how to conduct diagnostic and therapeutic interviews in a way that is empathic, sensitive, and mindful of confidentiality.  I understood early in my training that without a person's trust, there was little chance that they would follow my suggestions, no matter how correct or well-meant they might be.

I have a strong interest in medical informatics and have worked with a number of different electronic health record systems. I have contributed code and knowledge to a program helping to promote the use of the Veterans Administration electronic health record (VistA / CPRS) around the world.  These skills will help me document and present all of my interactions with, and findings from, persons believed to be infected with COVID-19.

In my view, the best kind of medicine and care happen when colleagues work with and learn from each other.  Helping to put a team together and learning how to work as a cohesive unit has always been my favorite part of any new job, and I look forward to being able to practice those skills. 

Although my residency training was in psychiatry, at New York University we were granted some leeway in our training.  Unlike most of my psychiatric colleagues, I asked for clinical rotations in medicine, infectious diseases, and oncology.  I spent three months working in the ICU at Bellevue Hospital helping to treat patients in advanced phases of illness.  I was the primary physician for a patient with one of the first locally-acquired cases of fulminant malaria seen in New York for years, and worked with epidemiologists to clarify the origins of that case. 

I have spent much of my medical career working in public health, and usually with people who are underserved by existing medical systems.  Learning how to earn the trust and partnership of people who might have a natural and understandable mistrust of medicine and authority is not easy or simple.  But it is the most important part of the process.

I trained at Bellevue Hospital in New York City, which is (in my view) the most vital public health institution in that city.  This is a place where people come when they do not have health insurance and often lack many other types of social support.  I learned from the best, there, about how to bring people in from the community and help them realize the ways in which they could get better.  I worked in the Free Clinic at Bellevue during medical school and residency and began to understand how to work with a diverse community of people who were very different from me.

Helping people to change their behavior is the basis of any worthwhile medical intervention.  Sometimes this is something simple, such as getting people to stop doing something that is hurting them such as smoking or excessive alcohol consumption.  At other times this is more complex - getting people to do something difficult and unpleasant with an unclear and distant payoff.  

During this COVID-19 pandemic, and as part of the contact tracing program, we will be asking people to isolate or quarantine themselves for the good of others.  This will require ongoing care and relationship-building with people who will be in a difficult and frightening situation - in a crisis, to put it simply.  I believe that my previous experience, along with my desire and willingness to learn more, will make me a valuable part of this program.

I will be ready to put my skills to work for the Commonwealth of Virginia, and more importantly to learn how I can contribute best to the effort.  I look forward to being a part of this important project.

I would like to thank you for taking the time to look through my application materials.


Nicholas Taintor

** From job overview for case investigator:
*** Core duties:
**** Interviewing and data collection
***** Communicates with contacts in professional and empathic manner
***** Collects and records information into statewide database
**** Heath Education
***** Provides cases with approved information about state isolation procedures and monitors compliance
***** Alerts epidemiologists if the case is associated with a congregate or other high-risk setting
***** Providing ill person with resources 
**** Data entry and maintenance
***** Uses established database(s) to identify newly diagnosed patients
***** Inputs data collected into database and keeps database up to date
***** Provides data from case investigation efforts to epidemiologists and / or Health Educators as necessary
*** KSAs
**** Knowledge of public health practices, communicable diseases, disease control, epidemiologic methods
**** Ability to manage, compile, analyze, and present data
**** Ability to communicate clearly both orally and in writing with diverse audiences
**** Ability to work with a variety of computer packages
**** Understanding of patient confidentiality
**** Excellent and sensitive interpersonal, cultural sensitivity, and interviewing skills to maintain trust with interviewees; judgement to refer cases if needed
* Messing with emacs-reveal
** Looks like I need to find a way to add that configuring javascript at the end
** Audio:
- Here's a way to change the audio config at the beginning:
#+begin_src 
# Set autoplay to true for audio plugin.
#+OER_REVEAL_AUDIO_SLIDESHOW_CONFIG: audioStartAtFragment: true, audio: { advance: -1, autoplay: true, defaultDuration: 0, defaultAudios: false, playerOpacity: 0.8, playerStyle: 'position: fixed; bottom: 9.5vh; left: 0%; width: 30%; height:30px; z-index: 33;' }

#+end_src

** Incorporating license data
**** Trying to figure out a way to:
Extract and put in license information in image metadata
   - Exiftool - FOSS, mac & Linux
   - mac CLI: [[https://exiftool.org/][exiftool]] - FOSS. =Brew install exiftool=
   - Ubuntu: =sudo apt install libimage-exiftool-perl=
   - Here's an example of how to put information into an image using =exiftool=:
#+begin_src bash
exiftool -ImageDescription="This is an image from the book Frankiesaurus and the Helpful Spider" -Artist="Nick Taintor" \
> -Copyright="This work is licensed under the Creative Commons Attribution ShareAlike 4.0 International License. \
dquote> To view a copy of this license, visit http://creativecommons.org/licenses/by-sa/4.0/ or send a \
dquote> letter to Creative Commons, PO Box 1866, Mountain View, CA 94042 USA." \
-XMP-cc:License="http://creativecommons.org/licenses/by-sa/4.0/" okpops.png
#+end_src
**** Here's a package that could be useful:
[[https://github.com/emacsmirror/exiftool][exiftool.el]] is an elisp wrapper around ExifTool

**** emacs-reveal .meta file components:
example: 
((filename . "./figures/data-structures/block-chain.png")
 (licenseurl . "https://creativecommons.org/licenses/by-sa/4.0/")
 (licensetext . "CC BY-SA 4.0")
 (cc:attributionName . "Jens Lechtenbörger")
 (cc:attributionURL . "https://gitlab.com/lechten")
 (dc:source . "https://gitlab.com/oer/figures/blob/master/data-structures/tikz/block-chain.tex")
 (sourcetext . "GitLab")
 (dc:title . "Block chain of transactions")
 (texwidth . 0.9)
)



3) develop a workflow to put that information into an emacs-reveal .meta file
* Background checks
** DONE hireright confirmation # 02328936 said 15 days
- State "DONE"       from "TODO"       [2020-07-07 Tue 11:37]
- Received response <2020-07-21 Tue> that they had no record of anyone requesting info from them, so nothing to give me
** Allegedly nothing at Empinfo
** Kept getting errors with Equifax
** DONE PeopleFacts
- State "DONE"       from "TODO"       [2020-07-07 Tue 11:54]
** DONE InfoCubic
- State "DONE"       from "TODO"       [2020-07-07 Tue 12:00]

* CompTIA class site
- <2020-07-11 Sat> temporarily running it under frankie.monster, having some weird issues with my pepsidotcom.com url  **resolved**
- <2020-07-16 Thu> now living at *index.org* in *sessionone* directory, straight export to HTML
- 
* Matrix/Jitsi
** sources for build:
- using mostly [[https://dev.to/joenas/matrix-homeserver-synapse-v09911-with-traefik-35ja][Jon Neverland's build]], but his model was built with Traefik 1.0
- Also, I put all the various accompanying directories right off ~/docker/containers/matrix rather than off /opt/matrix the way he did
- will install ma1sd identity server from its [[https://github.com/ma1uta/ma1sd][Github repo]]
  - (but will do it later - will probably need to add m.identity_server in ./matrix/nginx/www/.well-known/matrix/client)
** trying a thing <2020-07-27 Mon>
- Trouble (seems) to be with videobridge.  When I exec'd into the container yesterday, ~/etc/init.d/jitsi-videobridge2 status~ returned FAIL
- I could restart it manually within the container, but what's the point?
- Followed various Github issues, including [[https://github.com/jitsi/docker-jitsi-meet/issues/573][this one]], but my issue still not resolved
- So I decided I would build the whole thing on metal on Dudley so that I can compare things.
- Using [[https://matrix.org/blog/2020/04/06/running-your-own-secure-communication-service-with-matrix-and-jitsi][this]] off the main matrix site, following their Debian installation guide
- following instructions [[https://github.com/matrix-org/synapse/blob/develop/docs/postgres.md][here]] to change synapse database to postgres
- seemed to work; had to put =server_name= in homeserver.yaml
** setting up secured site
- mostly from [[https://crosstalksolutions.com/how-to-enable-jitsi-server-authentication/][here]]
- =sudo prosodyctl register nick jitsi.brainsled.xyz bannanablanketsmoke=
- bannanablanketsmoke
** Back to trying Jitsi with Docker
- <2020-07-30 Thu> Based on [[https://community.jitsi.org/t/traefik-and-docker-install/23551/42][this jitsi.org thread]] (last post May 27th) a fundamental problem is getting jvb to work over UDP with Traefik
  - But keep looking at that thread and successors
** So the question that goes through my mind now is:
- can we figure out a way to have matrix / jitsi baremetal and traefik live together?
** Trying to set it all up behind Traefik
*** Ports needed for jitsi:
- (seem to no longer need whole UDP range 10000-20000)
- =80 TCP= - SSL certificate verification / LE renewal
- =443 TCP= - general access to Jitsi Meet
- =4443 TCP= - fallback network video / audio communications (i.e. when UDP is blocked)
- =10000 UDP= - general network video/audio communications
*** setting up port intercept / diversion in traefik dynamic conf:
#+begin_src yaml
http:
  routers:
    jitsi_router:
      entryPoints:
        - "websecure"
      rule: "Host(`jitsi.brainsled.xyz`)"
      service: "jitsi_service"
      tls:
        certResolver: "letsencrypt"

  services:
    jitsi_service:
      loadBalancer:
        passHostHeader: true
        servers:
          - url: "http:45.79.138.21:4444"
#+end_src
*** setting up custom port location in jitsi conf files
**** in =/etc/nginx/sites-available/jitsi.brainsled.xyz.conf=
- /change all =80= to 4442/ - undone <2020-09-23 Wed>
- change all =443= to 44443
- server name is =jitsi.brainsled.xyz=
**** in =/etc/jitsi/meet/jitsi.brainsled.xyz-config.js=
- change =bosh= lines:
  - =bosh: '//jitsi.brainsled.xyz:44443/http-bind',=
  - =return 301 https://$host:44443/$request_uri;=
**** seeing what is listening to ports:
- =sudo netstat -plnt=
- filter to things listening to port 80:
  - =sudo netstat -plnt | grep ':80'=
*** error: no valid ssl cert
- this cert problem seemed to be from Traefik trying to talk to jvb over HTTP.
- I put =insecureSkipVerify: true= into static config.
  - This is said to have security implications, namely that it leaves you open to MITM attacks.  But since both processes are in the same machine, I'm less worried about this.
  - However, will need to fix!
  - Presumably by figuring out how to give the jitsi stuff its own internal cert?
*** <2020-09-23 Wed> now running, sort of -
- stuff comes up but connection is dropped in a few minutes, no one can join
- This all looks oddly familiar, and I believe is due to no connection being made over port 10000 to jvb.
  - Will need to figure out how to forward port 10000 through Traefik.  Currently only 443 going through.


* HAProxy
- Since I feel like Jitsi & Matrix work better (for me, anyway) as a non-Dockerized service and I'm having trouble setting them up behind Traefik that way, and it's hard to figure out how to share ports 80 and 443, how about running Jitsi / Matrix in a linux container and having HAproxy decide which packets go where?  Why not indeed?
*** Installing LXD
- [[https://blog.simos.info/how-to-initialize-lxd-again/][This]] is a helpful website for dealing with some of the errors I had.
- [[https://linuxcontainers.org/lxd/][The main pages for LXD and LXC]]
- LXD = container hypervisor
  - /install: =sudo apt install lxd= - (select 4.0)/
  - <2020-09-27 Sun> now using snap instead - don't use the PPA!
    - turns out need to install 4.0 channel specifically, and more specificaly 4.6):
      - =snap install lxd --channel=4.6/stable=
        - and to update from earlier channels if you installed them, =sudo snap refresh --channel=4.6/stable lxd=
  - Need to enable swap accounting, done by:
    - appending =swapaccount=1= to =GRUB_CMDLINE_LINUX_DEFAULT= variable in =/etc/default/grub=
    - Had to check around exactly what they meant by "append," seems to work as this but will check after:
      - ~GRUB_CMDLINE_LINUX_DEFAULT="quiet splash swapaccount=1"~
      - ("quiet" and "splash" have to do with the first screens shown by GRUB, and are not germane to any of this)
      - After making that change, =sudo update-grub= and =reboot=
- =lxd init= must be run by root, =lxc= commands can be run by anyone who is a member of the group =lxd=
  - =sudo usermod -a -G group1,group2,group3 username= to make a user part of a group
  - =sudo usermod -a -G lxd nick= to make /me/ part of =lxd=
- checking on versions installed:
  - =lxc --version=
  - =lxd --version=
- An error that came up one of the first times I tried this: =sudo dd if=/dev/zero of=/dev/sdc4 count=64 bs=1024= when error creating zfs pool, =device or resource busy= and =one or more vdevs refer to the same device, or one of the devices is part of an active md or lvm device=.
- Actually, the key to that error seems to have been that I can /create/ the partition but not format it.  LXD wants to format it.  If I had already formatted it, it is seen as "in use."  They could have explained /that/ better!
- Looking at the zpool drives: =sudo zpool status=
*** Putting up an instance
1. ~instances~ based on ~images~
2. find a 64-bit debian 10 image (for example):
   - =lxc image list images: debian/10 amd64=
3. Launching the instance: =lxc launch images:debian/10 debian=
*** Using [[https://autoize.com/lxc-lxd-containers-with-haproxy/][these instructions]] as a base to set up a practice session on =dudley=
**** start with =snap install lxd=
**** add user to lxd user group:
=usermod -aG lxd [user]=
**** set up lxd:
=sudo lxd init=
[in this case, will use a zfs loop device (on =falkie= will use a block device)
**** set up web containers
=lxc launch ubuntu:20.04 web1=
=lxc launch ubuntu:20.04 web2=
=lxc launch ubuntu:20.04 haproxy=
**** point Linode DNS provider to FQDN of test containers (in this case used =web1= and =web2=)
**** set up =nginx= in each web container
- drop into first container =web1=
  - =lxc exec web1 /bin/bash=
  - =apt update && apt dist-upgrade && apt-get install nginx-common libnginx-mod-rtmp -y=
  - =apt-get install nginx -y=
  - =systemctl enable nginx=
  - =systemctl start nginx=
  - edit =/var/www/html/index.nginx-debian.html=
    - =nano -c /var/www/html/index.nginx-debian.html=
    - change line 4 to =web1= (or web2) =works!=
- do the same for =web2=
**** forward :80 and :443 from host to =haproxy= container
- =lxc config device add haproxy http proxy listen=tcp:0.0.0.0:80 connect=tcp:127.0.0.1:80=
- =lxc config device add haproxy https proxy listen=tcp:0.0.0.0:443 connect=tcp:127.0.0.1:443=
[this creates a TCP to TCP proxy device]
- stuff about haproxy and =proxy_protocol= [[https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt][here]]
- [[https://www.linode.com/docs/applications/containers/beginners-guide-to-lxd-reverse-proxy/][this]] is also a good guide
**** set up the =haproxy= container:
- =lxc exec haproxy /bin/bash=
- root@haproxy:~# =apt update && apt upgrade=
- (staying in =haproxy= container)
- =apt install haproxy=
- =systemctl enable haproxy=
- =systemctl start haproxy=
(installing certbot for nginx)
- =snap install --classic certbot=
- =sudo certbot --nginx=
(though, may want to use [[https://github.com/go-acme/lego#installation][lego]]? Above two options won't let me install wildcard certificates yet)
- <2020-09-27 Sun> stopped here, <2020-09-27 Sun 20:57> stopped here again (about to install =lego=, didn't try certbot)

Exciting attempt to use HAproxy & LXC
- Since I feel like Jitsi & Matrix work better (for me, anyway) as a non-Dockerized service and I'm having trouble setting them up behind Traefik that way, and it's hard to figure out how to share ports 80 and 443, how about running Jitsi / Matrix in a linux container and having HAproxy decide which packets go where?  Why not indeed?
*** Installing LXD
- [[https://blog.simos.info/how-to-initialize-lxd-again/][This]] is a helpful website for dealing with some of the errors I had.
- [[https://linuxcontainers.org/lxd/][The main pages for LXD and LXC]]
- LXD = container hypervisor
  - /install: =sudo apt install lxd= - (select 4.0)/
  - <2020-09-27 Sun> now using snap instead - don't use the PPA!
    - turns out need to install 4.0 channel specifically, and more specificaly 4.6):
      - =snap install lxd --channel=4.6/stable=
        - and to update from earlier channels if you installed them, =sudo snap refresh --channel=4.6/stable lxd=
  - Need to enable swap accounting, done by:
    - appending =swapaccount=1= to =GRUB_CMDLINE_LINUX_DEFAULT= variable in =/etc/default/grub=
    - Had to check around exactly what they meant by "append," seems to work as this but will check after:
      - ~GRUB_CMDLINE_LINUX_DEFAULT="quiet splash swapaccount=1"~
      - ("quiet" and "splash" have to do with the first screens shown by GRUB, and are not germane to any of this)
      - After making that change, =sudo update-grub= and =reboot=
- =lxd init= must be run by root, =lxc= commands can be run by anyone who is a member of the group =lxd=
  - =sudo usermod -a -G group1,group2,group3 username= to make a user part of a group
  - =sudo usermod -a -G lxd nick= to make /me/ part of =lxd=
- checking on versions installed:
  - =lxc --version=
  - =lxd --version=
- An error that came up one of the first times I tried this: =sudo dd if=/dev/zero of=/dev/sdc4 count=64 bs=1024= when error creating zfs pool, =device or resource busy= and =one or more vdevs refer to the same device, or one of the devices is part of an active md or lvm device=.
- Actually, the key to that error seems to have been that I can /create/ the partition but not format it.  LXD wants to format it.  If I had already formatted it, it is seen as "in use."  They could have explained /that/ better!
- Looking at the zpool drives: =sudo zpool status=
*** Putting up an instance
1. ~instances~ based on ~images~
2. find a 64-bit debian 10 image (for example):
   - =lxc image list images: debian/10 amd64=
3. Launching the instance: =lxc launch images:debian/10 debian=
*** Using [[https://autoize.com/lxc-lxd-containers-with-haproxy/][these instructions]] as a base to set up a practice session on =dudley=
**** start with =snap install lxd=
**** add user to lxd user group:
=usermod -aG lxd [user]=
**** set up lxd:
=sudo lxd init=
[in this case, will use a zfs loop device (on =falkie= will use a block device)
**** set up web containers
=lxc launch ubuntu:20.04 web1=
=lxc launch ubuntu:20.04 web2=
=lxc launch ubuntu:20.04 haproxy=
**** point Linode DNS provider to FQDN of test containers (in this case used =web1= and =web2=)
**** set up =nginx= in each web container
- drop into first container =web1=
  - =lxc exec web1 /bin/bash=
  - =apt update && apt dist-upgrade && apt-get install nginx-common libnginx-mod-rtmp -y=
  - =apt-get install nginx -y=
  - =systemctl enable nginx=
  - =systemctl start nginx=
  - edit =/var/www/html/index.nginx-debian.html=
    - =nano -c /var/www/html/index.nginx-debian.html=
    - change line 4 to =web1= (or web2) =works!=
- do the same for =web2=
**** forward :80 and :443 from host to =haproxy= container
- =lxc config device add haproxy http proxy listen=tcp:0.0.0.0:80 connect=tcp:127.0.0.1:80=
- =lxc config device add haproxy https proxy listen=tcp:0.0.0.0:443 connect=tcp:127.0.0.1:443=
[this creates a TCP to TCP proxy device]
- stuff about haproxy and =proxy_protocol= [[https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt][here]]
- [[https://www.linode.com/docs/applications/containers/beginners-guide-to-lxd-reverse-proxy/][this]] is also a good guide
**** set up the =haproxy= container:
- =lxc exec haproxy /bin/bash=
- root@haproxy:~# =apt update && apt upgrade=
- (staying in =haproxy= container)
- =apt install haproxy=
- =systemctl enable haproxy=
- =systemctl start haproxy=
(installing certbot for nginx)
- =snap install --classic certbot=
- =sudo certbot --nginx=
(though, may want to use [[https://github.com/go-acme/lego#installation][lego]]? Above two options won't let me install wildcard certificates yet)
- <2020-09-27 Sun> stopped here, <2020-09-27 Sun 20:57> stopped here again (about to install =lego=, didn't try certbot)

** using LXD container hostnames - a kind of local DNS
- =ip addr show dev lxdbr0= (to show the data for the LXD bridge set up during =lxd init=)
- =dnsmasq= in LXD needs to understand that it is the authoritative DNS server for the LXD domain
- but we want to avoid a DNS loop!
  - so we add =dns-loop-detect= which dtects DNS loops by sendng TXT queries to each server; if they boomerang then the upstream server is disabled.  Test runs each time bridge is enabled; in this case at LXD startup.
  - =echo -e "auth-zone=lxd\ndns-loop-detect" | lxc network set lxdbr0 raw.dnsmasq -=
- =sudo systemd-resolve --interface lxdbr0 --set-dns 10.215.36.1 --set-domain lxd=
  - this sets the DNS server for =lxdbr0= to the ip address of =lxdbr0=
  - specifies domain as =lxd=
  - check that it worked with =systemd-resolve --status lxdbr0=
- There is more to look at here - [[https://blog.simos.info/how-to-use-lxd-container-hostnames-on-the-host-in-ubuntu-18-04/][using LXD hostnames]]
- I'm not sure I need this ability yet
* Getting letsencrypt certs for HAProxy
** run this to download and extract =golang= and install =lego=
- don't mess around with the =go= installation, easiest and most reliable way seems to be:
  - downloading the correct package from [[https://github.com/go-acme/lego/releases][the lego releases page]], which in this particular case on <2020-09-28 Mon> is:
  - =wget https://github.com/go-acme/lego/releases/download/v4.0.1/lego_v4.0.1_linux_amd64.tar.gz=
  - then =tar -xzvf lego_v4.0.1_linux_amd64.tar.gz= (or whatever the filename turns out to be 
**  put =LINODE_TOKEN= in =/etc/environment= /in/ HAProxy LXC, since that's where we'll be getting certs from
- But then for some reason storing the variable in =/etc/environment= wasn't working, so I did this:
  - ~LINODE_TOKEN=[LINODE token]~ to get it in for that session
  - ~LINODE_TOKEN=$LINODE_TOKEN ./lego --email="nick.taintor@gmail.com" --domains="*.frankiesaurus.com" --dns="linode" run --run-hook="./myscript.sh"~
    - (but couldn't get =myscript.sh= to take - that's where =lego= is supposed to record some things)
    - certificate is at =root/.lego/accounts=
** Turns out HAProxy has its own mechanism for this?
*** Looking [[https://www.haproxy.com/blog/lets-encrypt-acme2-for-haproxy/][here]]
*** Well, maybe some other time.
** Trying =certbot= again:
*** =snap install --classic certbot=
*** =certbot certonly --manual --preferred-challenges dns --server https://acme-v02.api.letsencrypt.org/directory --manual-public-ip-logging-ok -d '*.<your.domain>' -d <your.domain>=
** Then, 
- put the code in the DNS server (Linode, for me) under the hostname =_acme-challenge.brainsled.xyz=
- Wait 5 minutes, assuming you remembered to put 5 min TTL!
** Success!  stored at
- =/etc/letsencrypt/live/brainsled.xyz/fullchain.pem=
- =/etc/letsencrypt/live/brainsled.xyz/privkey.pem=
** Then concatenate the results into something that HAProxy can understand:
- =cat fullchain.pem privkey.pem > brainsled.xyz.pem=
** =nano /etc/haproxy/haproxy.cfg=
** edit this in:
#+begin_src bash
frontend www-https
bind *:443 ssl crt /etc/letsencrypt/live/brainsled.xyz/brainsled.xyz.pem   #<-- change location
reqadd X-Forwarded-Proto:\ https
 
acl host_web1 hdr(host) -i web1.example.com   #<-- put names of containers here
acl host_web2 hdr(host) -i web2.example.com
 
use_backend subdomain1 if host_web1
use_backend subdomain2 if host_web2
 
frontend http_frontend
bind *:80
 
acl web_host1 hdr(host) -i web1.example.com    #<-- put names of containers here
acl web_host2 hdr(host) -i web2.example.com
 
use_backend subdomain1 if web_host1
use_backend subdomain2 if web_host2
 
backend subdomain1
balance leastconn
http-request set-header X-Client-IP %[src]
redirect scheme https if !{ ssl_fc }
server web1 web1.lxd:80 check
 
backend subdomain2
balance leastconn
http-request set-header X-Client-IP %[src]
redirect scheme https if !{ ssl_fc }
server web2 web2.lxd:80 check
#+end_src
** Then,
- save and close, restart HAProxy:
- =# systemctl restart haproxy=
** =http://web1.brainsled.xyz= should work
- but didn't!
- stopping for the night <2020-09-29 Tue 01:30>
* HAProxy again
** Trying through [[https://kifarunix.com/install-and-setup-haproxy-on-ubuntu-20-04/][this set of instructions]]
- there is an "SSL Pass through" somewhere...

* Resizing (shrinking) a partition
** resize2fs first
- boot on USB or something
  - (for Hetzner, boot in rescue mode)
- =lsblk= to make sure you know what's what
- =e2fsck= the partition first to make sure it's OK
- then (example) =resize2fs -p /dev/sdb3 120G=
** then =parted= / =resizepart=
- =parted /dev/sdb=
  - find partition numbers with =print=
  - (parted) =resizepart=
    - partition number? 3
    - End?  [256GB]? 120
* making a new partition with the space that's left
** =parted /dev/sdb print unit MB print free=
- starts at =140000MB=
** can run =gparted= through x11 by =sudo -E gparted= (after logging in with =-X= obvs)
* Backing up
** <2020-09-24 Thu> Not the best long-term thing, but
- for a quick incremental image using =rsnapshot=.
- NOTE: in rsnapshot.conf, /need/ to use TABs
- To avoid backing up mounted drives as well, in =/etc/rsnapshot.conf= changed line to:
  - =backup  /             localhost/rootfs one_fs=1=
  - (this backs up the root directory but stays in the same filesystem)
- check configuration: (needs to be =sudo= if backing up root fs):
  - =sudo rsnapshot configtest=
- Dry run:
  - =rsnapshot -t daily=
- As long as daily has been set up in config, then back up with
  - =sudo rsnapshot daily=
- Maybe this little tidbit in the man page was why it kept copying my mounted media files anyway:
  - a ’*’ matches any path component, but it stops at slashes
    use ’**’ to match anything, including slashes.
- in =rsnapshot.conf= put in line: =exclude         /mnt/**=
* Traefik
** generating password to go into =.htpasswd=:
#+begin_src bash
echo $(htpasswd -nb user password) | sed -e s/\\$/\\$\\$/g

htpasswd -b -c ~/temp/password admin test101

#+end_src

* Looking around for new dedicated server
** Hetzner:
*** speeds over MTR from VA to Nuremberg center (10 pkts)

| time    | server               | Loss% | Snt | Last | Avg  | Best |  Wrst | StDev |
|---------+----------------------+-------+-----+------+------+------+-------+-------|
| 3pm     | nbg.icmp.hetzner.com |  0.0% |  10 |  7.0 | *19.6* |  4.6 | 110.7 |  32.4 |
| 11pm    | nbg.icmp.hetzner.com |  0.0% |  10 | 10.8 | *8.3*  |  5.1 |  11.7 |   2.5 |
| 11:30pm | nbg.icmp.hetzner.com |  0.0% |  10 | 13.4 | *10.9* |  5.8 |  27.9 |   6.6 |
|---------+----------------------+-------+-----+------+------+------+-------+-------|


*** speeds over MTR from VA to Falkenstein:(10 pkts)

| time    | server               | Loss% | Snt | Last | Avg  | Best |  Wrst | StDev |
|---------+----------------------+-------+-----+------+------+------+-------+-------|
| 3pm     | fsn.icmp.hetzner.com |  0.0% |  10 | 13.5 | *22.8* |  7.3 | 104.9 |  29.4 |
| 11pm    | fsn.icmp.hetzner.com |  0.0% |  10 | 11.3 | *9.6*  |  4.5 |  14.3 |   2.8 |
| 11:30pm | fsn.icmp.hetzner.com |  0.0% |  10 |  2.8 | *13.6* |  2.8 |  61.7 |  17.5 |
|---------+----------------------+-------+-----+------+------+------+-------+-------|


*** speeds over MTR from VA to Helsinki:(10 pkts)

| time    | server               | Loss% | Snt | Last | Avg  | Best | Wrst | StDev |
|---------+----------------------+-------+-----+------+------+------+------+-------|
| 3pm     | hel.icmp.hetzner.com |  0.0% |  10 | 12.3 | *10.4* |  6.1 | 20.0 |   3.8 |
| 11pm    | hel.icmp.hetzner.com |  0.0% |  10 |  4.2 | *9.1*  |  3.3 | 19.9 |   5.9 |
| 11:30pm | hel.icmp.hetzner.com |  0.0% |  10 |  7.2 | *11.2* |  3.1 | 42.8 |  11.6 |
|---------+----------------------+-------+-----+------+------+------+------+-------|

** Reprise hosting:
*** speeds over MTR from VA to Reprise (10 pkts avg)

| time    |          server | Loss% | Snt | Last | Avg  | Best | Wrst | StDev |
|---------+-----------------+-------+-----+------+------+------+------+-------|
| 3pm     | 162.253.153.104 |  0.0% |  10 | 11.9 | *14.5* |  6.9 | 37.2 |   8.5 |
| 11:30pm | 163.253.153.104 |  0.0% |  10 | 12.3 | *16.3* |  9.0 | 33.7 |   8.4 |
| 12:30am | 164.253.153.104 |  0.0% |  10 |  9.2 | *8.0*  |  3.1 | 13.9 |   3.0 |
|---------+-----------------+-------+-----+------+------+------+------+-------|

* Setting up Hetzner server
** [[https://robot.your-server.de/server][Robot address]]
** SSD and HDD
Eventually figured out how to put OS on SSD.  On first =installimage= comment out all drives but SSD, change SSD name to =DISK1=
*** However,
- doesn't boot right. What I would like is to have the OS boot off of the SSD. I want the HDDs to just be file storage.  Working from [[https://hostedtalk.net/t/hetzner-setting-additional-ssd-as-boot/1865/13][this]] discussion, started over.
- The issue with my server is that the SSD is locared at sdc instead of sda, so you gotta do all kinds of tricky things to tget it to boot first.  Which are detailed here:
*** remove all partitions using =parted=
- all you need to do is make a new partition table, and everything prior is erased
*** using =installimage=, commented out HDDs and changed SSD name to DISK1
- so, installed ubuntu to SSD
- (changed SWRAID to 0)
*** first steps:
- create a small (~10MB) partition on each 3TB disk, type set to bios boot:
  - using =gdisk=:
    - for bios-boot partition
      - =<n>= - new partition
      - =<enter>= - first available sector
      - =+10M= - 10MiB in size
      - type: =ef02= - bios boot
    - for rest
      - =<n>= - new partition
      - =<enter>= - first available sector
      - =-0= - to end
      - type: =8300= - linux file system
  - =w= to write and quit when done
*** then, root partition appears to be =/dev/sdc3=
- boot partition appears to be =/dev/sdc2/=
- so:
  1. =mount /dev/sdc3 /mnt=
  2. =mount /dev/sdc2 /mnt/boot=
- this way both root and boot partitions are mounted
*** bind mount dev/proc/sys into root-partition
- =for f in proc sys dev ; do mount --bind /$f /mnt/$f ; done=
- =chroot /mnt /bin/bash=
- =grub-install /dev/sda=
- =grub-install /dev/sdb=
- =update-grub=
- =reboot=
*** Holy shit that worked!
*** However, still no file system
- In both fdisk and gdisk, partitions are made without file systems, so
  - =mkfs.ext4 /dev/sdb2= for example
  - This worked for both of them
*** Setting up mount points and fstab:
- mounted sda2 at /mnt/driveA, sdb2 at /mnt/driveB
- made a =data= group to own them
- =sudo usermod -aG data USERNAME= to add users to the group
- used =chmod g+s .;= to (hopefully) sets the group id (setgid) on the current directory, which should mean that new files will inherit the ownership - even if copied (but not if moved)
filebot -rename . --db TheTVDB  --lang en --order DVD --mode interactive=
* Helping with mom's computer
** <2020-09-07 Mon> Fixed:
- Showed her how to put bookmarks in bookmarks bar, worked on those
- Cleaned up notification bar pinned apps
- Now, the Vhrome that is pinned there will open up signed into her account (or should!)
- Jumbled-looking text on Google Chrome but fine in other browsers (tried Firefox and Edge)
  - tried:
    - Turning on / off hardware acceleration in Google Chrome
    - Turning on / off TrueText
  - worked: For some reason, signing her back into her Google account fixed the problem
- Updated: Still on 1909, 2004 update not yet available and per people in Reddit worth skipping
  - Allowed Windows Update to do its thing, there were things that it was updating within 1909
  - Waiting to see how that worked
- Pending: For some reason, her desktop is not the nice blank slate I would want it to be - it's almost like some of the start button options are always on top.  Also her wallpaper keeps disappearing (though that might have to do with me signing in with TeamViewer)
* Setting up advance directives in Virginia
** Some things to think about at the beginning:
- So, you want to put something together so that you might have some degree of control over the things that happen to you in a hospital if you are unable to communicate or express your wants or needs.  That is a pretty good idea!  Here are some suggestions for how to go about this.

  The document you want to have produced at the end of all this goes by a bunch of different names, depending on where you live and depending on what your exact use of it will be.  It is most commonly called a "living will" or "health care advance directive."  It is sometimes called a "durable power of attorney for health care."  As the American Bar Association (ABA) says in its [[https://www.americanbar.org/groups/law_aging/resources/health_care_decision_making/consumer_s_toolkit_for_health_care_advance_planning/][discussion of this topic]]:

  #+begin_quote
  "Studies have shown that standard advance directive forms do little to influence end-of-life decisions without: (1) informed, thoughtful reflection about your wishes and values, and (2) personal communication between you and your likely decision-makers before a crisis occurs."
  #+end_quote

- In other words, it is important and good to have a piece of paper or electronic document that clearly states your wishes and desires for the kind of medical treatment you would like to receive when you are unable to express that choice.  It is also important to remember that this will only be a piece of paper (or a collection of 1s and 0s) - it can be and sometimes is ignored by medical practitioners.
  
  This means: the most important part of the advance directive that you fill out will be the very first section, the one that designates your health care proxy.  It is important to designate a health care proxy, and to have a thorough discussion with that person about the things that you would like or not like to have done during a health care crisis.  Your health care proxy could be anyone, but they should be a person that you trust to be able to carry out this role.  If you have family members who might get involved in making a health care decision for you, it is important to inform them that you have a health care proxy who will be formally designated to make those decisions for you.  In fact, you should tell the important people in your life about this the moment you do it!

  A quick aside - most people associate these documents and discussions and preparations with "end-of-life" things.  You know, deciding who will "pull the plug" on you or other morbid considerations.  Please remember that there can be plenty of situations in which you might be hospitalized, unable to communicate, but with every chance of recovery.  This is stil la situation in which having a health care proxy and a set of written advance directives will be useful.

  OK, those are just some preamble-type suggestions.  Keep them in mind.
** Starting with the process:
- A good place to begin is the American Bar Association's Tool Kit for Health Care Advance Planning (found [[https://www.americanbar.org/groups/law_aging/resources/health_care_decision_making/consumer_s_toolkit_for_health_care_advance_planning/][here]]).  This walks you through some of the steps you need to think through when you are starting down this road.  This is a good place to start reading if you might still have some un certainty about what exactly you are getting yourself into.
** Then,
Once you've looked that over (or if you already think you know what you are doing!), the best place to get started with the specifics starts on the Virginia State Bar's page on healthcare decision-making (which is [[https://www.vsb.org/site/public/healthcare-decisions-day][right here]]).
  - That page has links to the most current versions of the forms you need to fill out, in PDF form (and with the fields set up in the PDF, so easier to fill out on your computer).
    - There are "short" and "full" versions of these forms - it doesn't look to me like the "full" versions add anything important, so I'd stick with the short versions.
    - Remember that as long as you have signed the form and had that signature witnessed, you can fill out as much or as little of the form as you want.  If all you want to do is designate a health care proxy, then fill out that part.  That's all you need.
  - Part C, on the second page of the short form, can be a little confusing for people.  It is the only part of the document in which you would need the signature of a licensed professional, but it only covers a particular situation: one in which you might object to a needed medical treatment, an objection you might not make in a better, healthier frame of mind.  *Section C* allows your health care proxy to make a health care decision for you over your explicit objection.  If you want to cover this situation in your advance directive, then get a licensed professional to sign this part for you.
  - The Virginia State Bar page also has a link to the [[https://connectvirginia.org/adr][Virginia Advance Health Care Directives Registry]] (VAHCDR) which is where you are able to securely store your directive forms.
    - Once you have created an account on the VAHDCR and stored your documents there, you can print out a wallet card to carry with you, which will allow people to access the VAHDCR and look up your stuff.
** So here's an outline of the process you might follow:
1) Read the ABA's tool kit [[https://www.americanbar.org/groups/law_aging/resources/health_care_decision_making/consumer_s_toolkit_for_health_care_advance_planning/][here]].
2) Think about who you would like to choose as your health care proxy.
3) Talk to that person, and plan to have a full and honest discussion about the kinds of medical care you want / don't want.  Be specific!  This is not a conversation in which you want to avoid talking about painful, awful things.  This is a conversation about painful and awful things, so just do that.
4) Download one of the forms from the [[https://www.vsb.org/site/public/healthcare-decisions-day][Virginia State Bar's Healthcare Decisions page]].  I suggest the [[https://www.vsb.org/sections/hl/Virginia_AD_Medical_Mental_End-of-Life_Healthcare_short.pdf][short version]] (<-- you can *right click* on that link, and "save as" a document to your computer).
5) Read the gray column on the left of each page of the form, as it has a pretty good explanation of the stuff you are filling out.
6) Remember that you can fill out as much or as little as you want - as long as you sign it and have the signature witnessed, the document is good.  Some people might, at the beginning, only want to designate a health care proxy.  That's fine!
7) Print out multiple copies and sign them.  Multiple copies, because it is good to have a few around, and you should be distributing them to (at least) your primary care physician and your health care proxy, as well as (possibly) some family members.  The important thing is that, if you were to end up in the hospital, it should not be too difficult to convey a copy of that form to the people caring for you in the hospital.  To that end, the next few steps will help:
8) Make an account at the [[https://connectvirginia.org/adr][Virginia Advance Health Care Directives Registry]] (VAHCDR).
9) Scan a signed copy of you advance directive, or electronically sign the digital version, and upload it to the VAHDCR.
10) Print out a wallet card to carry with you - this will allow people to access the electronic version of your advance directive.  This means that, even if you cannot communicate, there is a good chance the hospital will be able to find out who your health care proxy is and what your health care desires are.

I think that's pretty much it!

* Volvo
** Gas

| date             | mileage | gallons filled |
|------------------+---------+----------------|
| <2020-09-27 Sun> |  204940 |         10.932 |
|                  |         |                |


* Recipes
** Easy Banana Magic Cake
*** Ingredients
**** 1/2 cup unsalted butter-melted and slightly cooled
**** 1 Tablespoon water
**** 2 cups milk-lukewarm
**** 4 eggs-separated
**** ¾ cup sugar
**** 2 tablespoons light brown sugar
**** ½ cup mashed banana (1 medium banana)
**** 1 cup flour
**** 1 teaspoon vanilla extract
**** powdered sugar for dusting

*** Instructions

1) Preheat the oven to 325°F. Lightly grease 8×8 inch baking dish, set aside (you can line it with parchment paper leaving the sides overhang the pan, it will be easier to serve, you can lift the cake and transfer plate).
2) Whip the egg whites until STIFF peaks form, set aside.
3) Beat the egg yolks and sugars until pale yellow.
4) Mix in melted butter and the tablespoon of water (for about 2 minutes) until evenly combined.
5) Mix in mashed banana just to combine.
6) Mix in flour until evenly incorporated.
7) Slowly beat in the milk and vanilla extract until well combined.
8) Fold in the egg whites (1/3 at a time, then repeat until all of the egg whites are folded in). NOTES: The batter is very, very
 thin!!!
9) Pour the batter into the pan and bake for 45-60 minutes (until the cake is barely jiggly in the center). Baking time might vary depending on your oven or pan you use, but start checking after 45 minutes. If the top browns quickly before the minimum of 45 minutes, you can cover the cake with aluminum foil.
10) Cool the cake completely before dusting with powdered sugar. Even cooled, it will be slightly jiggly because it has custard layer in the center!

* Pasting stuff for scripts:
** Halfway through setting up Jitsi in an LXC, just gonna paste all the commands (with context) I enter, so I can think about puting stuff into a bash script later:
*** code:
- =lxc exec debian -- /bin/bash=
- from =/etc/nginx/sites-enabled/default= take the virtual host configuration example  at the bottom of the file, whch is this:
  #+begin_src bash
# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}
  #+end_src
- change it to this (for this particular case):
#+begin_src bash
# Virtual Host configuration for meet.frankiesaurus.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name frankiesaurus.com;
#
#       root /var/www/frankiesaurus.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}
#+end_src
- paste this into new files in =/etc/nginx/sites-enabled=, keeping =server_name= the same but changing where =root= is pointing:
  - =frankiesaurus.com= - =root /var/www/frankiesaurus.com=
  - =matrix.frankiesaurus.com= - =root /var/www/matrix.frankiesaurus.com=
    - for =matrix.frankiesaurus.com= replace =location= block with =proxy_pass http://localhost:8008=
  - =element.frankiesaurus.com= - =root /var/www/element.frankiesaurus.com=
- then =apt install -y python3-certbot-nginx && certbot --nginx -d frankiesaurus.com -d riot.frankiesaurus.com -d matrix.frankiesaurus.com=
  - (need to enter email, (A)gree, (Y)es
- for now, still haven't set up with HAProxy so certs did not go through.
